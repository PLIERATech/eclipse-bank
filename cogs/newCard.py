import nextcord as nxc
from nextcord.ext import commands
from const import *
from modules import *
import asyncio

command = "/—Å–æ–∑–¥–∞—Ç—å"

TYPE_TRANSLATION = {
    "personal": "–õ–∏—á–Ω–∞—è",
    "team": "–û–±—â–∏–Ω—ã",
    "banker": "–ë–∞–Ω–∫–∏—Ä–∞"
}

class NewCard(commands.Cog):
    def __init__(self, client):
        self.client = client
        
    @nxc.slash_command(guild_ids=server_id, name="—Å–æ–∑–¥–∞—Ç—å", description="–°–æ–∑–¥–∞—Ç—å –∫–∞—Ä—Ç—É Eclipse Bank")
    async def newCard(self, inter: nxc.Interaction, owner: nxc.Member, type: str = nxc.SlashOption(
        name="card_type",
        description="Choose 1",
        required=True,
        choices=["personal", "team"]
    ), color: str= nxc.SlashOption(
        name="card_color",
        description="Choose 1",
        required=True,
        choices=["black", "white", "red", "orange", "yellow", "green", "blue", "purple"]
    )):
        banker_id = inter.user.id
        banker = inter.user.display_name
        nickname = inter.user.display_name
        card_name = owner.display_name
        owner_id = owner.id
        guild = inter.guild

        #–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ banker
        if not any(role.id in (banker_role) for role in inter.user.roles):
            status="No Permissions"
            await inter.response.send_message("‚ùó –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.", ephemeral=True)
            PermsLog(nickname, banker_id, command, status) 
            return

#// –î–µ–π—Å—Ç–≤–∏–µ

        await inter.response.defer(ephemeral=True)

        #=–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
        await createAccount(guild, owner)

        #–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∏—Å—á–µ—Ä–ø–∞–Ω–∏–µ –ª–∏–º–∏—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç
        if not check_count_cards(owner_id):
            status="MaxCountCard"
            await inter.send("–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç.", ephemeral=True)
            PermsLog(nickname, banker_id, command, status)
            return 

        status="Success"
        PermsLog(nickname, banker_id, command, status)

        embed_color = None

        colors = {
            "red": nxc.Colour.from_rgb(182, 79, 81),
            "orange": nxc.Colour.from_rgb(220, 130, 82),
            "yellow": nxc.Colour.from_rgb(223, 186, 66),
            "green": nxc.Colour.from_rgb(146, 182, 79),
            "blue": nxc.Colour.from_rgb(79, 139, 182),
            "purple": nxc.Colour.from_rgb(137, 79, 182),
            "black": nxc.Colour.from_rgb(41, 41, 41),
            "white": nxc.Colour.from_rgb(245, 245, 245)
        }



        #=–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã
        full_number = create_card(banker, card_name, card_name, type, owner_id, color, do_random=True, adm_number="0")
        card_type_rus = TYPE_TRANSLATION.get(type, type)
        card_image = f"{full_number}.png"
        embed_color = colors.get(color, color)
        print(1)
        await inter.followup.send(content=f"–ö–∞—Ä—Ç–∞ —Ç–∏–ø–∞ {card_type_rus} —Å –Ω–æ–º–µ—Ä–æ–º {full_number} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")
        await asyncio.sleep(2)

        card = nxc.File(f"card_gen/cards/{card_image}", filename=card_image)
        print(2)
        card_embed = nxc.Embed(color=embed_color)
        card_embed.add_field(name="üí≥ –ö–∞—Ä—Ç–∞:", value=full_number, inline=True)
        card_embed.add_field(name="üóÇÔ∏è –¢–∏–ø:", value=card_type_rus, inline=True)
        card_embed.add_field(name="üí¨ –ù–∞–∑–≤–∞–Ω–∏–µ", value=card_name, inline=True)
        card_embed.set_image(url=f"attachment://{card_image}")
        card_embed.set_footer(text="Eclipse Bank 2025")
        print(3)
        response = supabase.table("clients").select("*").eq("dsc_id", owner_id).execute()

        channels_response = response.data[0]["channels"]
        channels = list(map(int, channels_response.strip("[]").split(",")))
        cards_channel_id = int(channels[1])
        cards_channel = inter.guild.get_channel(cards_channel_id)
        print(4)
        view = CardSelectView()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–∂–µ –≥–æ—Ç–æ–≤—ã–π View
        
        message_card = await cards_channel.send(content=f"{owner.mention}", embed=card_embed, file=card, view=view)
        print(5)
        #–ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã —Å–æ–∑–¥–∞–Ω–Ω–æ–π –∫–∞—Ä—Ç—ã / –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã, –∫—Ä–æ–º–µ —Ü–∏—Ñ—Ä
        card_numbers = full_number.translate(str.maketrans("", "", "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-"))
        supabase.table("cards").update({"select_menu_id": message_card.id}).eq("number", card_numbers).execute()


def setup(client):
    client.add_cog(NewCard(client))