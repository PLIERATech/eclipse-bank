import nextcord as nxc
from nextcord.ext import commands
from const import *
from modules import *

command = "/—Ä–∞–∑–∂–∞–ª–æ–≤–∞—Ç—å"
type = "banker"

ignore_members = [436507782263603200]
# ignore_members = [436507782263603200, 187208294161448960]

class Demote(commands.Cog):
    def __init__(self, client):
        self.client = client
        
    @nxc.slash_command(guild_ids=server_id, name="—Ä–∞–∑–∂–∞–ª–æ–≤–∞—Ç—å", description="—Ä–∞–∑–∂–∞–ª–æ–≤–∞—Ç—å –±–∞–Ω–∫–∏—Ä–∞")
    async def demote(self, inter: nxc.Interaction, member: nxc.Member):

        admin_id = inter.user.id
        admin_nick = inter.user.display_name
        member_nick = member.display_name
        member_id = member.id
        guild = inter.guild
        
        #–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ staff
        if not any(role.id in (staff_role) for role in inter.user.roles):
            status="No Permissions"
            await inter.response.send_message("‚ùó –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.", ephemeral=True)
            PermsLog(admin_nick, admin_id, command, status)
            return
        
        #–ü—Ä–æ–≤–µ—Ä–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–∞–Ω–∫–∏—Ä–æ–º
        if not any(role.id in (banker_role) for role in member.roles):
            status="isntBanker"
            await inter.response.send_message("‚ùó –î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –±–∞–Ω–∫–∏—Ä–æ–º.", ephemeral=True)
            PermsLog(admin_nick, admin_id, command, status)
            return

        await inter.response.defer(ephemeral=True)

        if not member_id in ignore_members:
            supabase.table("clients").update({"count_cards": 2}).eq("dsc_id", member_id).execute()

        # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
        get_card_info = get_card_info_demote(member_id)
        channels_response = get_card_info["channels_user"]
        channels = list(map(int, channels_response.strip("[]").split(",")))
        channel_card_id = channels[1]
        if int(get_card_info['banker_balance']) > 0:
            if get_card_info['non_banker_number'] == None:
                #=–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã –µ—Å–ª–∏ –Ω–µ—Ç –∏ –µ—Å—Ç—å –¥–µ–Ω—å–≥–∏
                card_type="personal"
                full_number = create_card(admin_nick, member_nick, member_nick, card_type, member_id, color="green", do_random=True, adm_number="0", balance=get_card_info['banker_balance'])
                card_type_rus = "–õ–∏—á–Ω–∞—è"
                card_image = f"{full_number}.png"

                #–£–¥–∞–ª–µ–Ω–∏–µ –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç—ã
                await delete_card(channel_card_id, int(get_card_info["banker_select_menu_id"]), inter.client)
                
                #–ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç—ã
                await asyncio.sleep(2)
                card = nxc.File(f"card_gen/cards/{card_image}", filename=card_image)

                card_embed = nxc.Embed(color=nxc.Colour.from_rgb(146, 182, 79))
                card_embed.add_field(name="üí≥ –ö–∞—Ä—Ç–∞:", value=full_number, inline=True)
                card_embed.add_field(name="üóÇÔ∏è –¢–∏–ø:", value=card_type_rus, inline=True)
                card_embed.add_field(name="üí¨ –ù–∞–∑–≤–∞–Ω–∏–µ", value=member_nick, inline=True)
                card_embed.set_image(url=f"attachment://{card_image}")
                card_embed.set_footer(text="Eclipse Bank 2025")

                cards_channel = inter.guild.get_channel(channel_card_id)

                view = CardSelectView()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–∂–µ –≥–æ—Ç–æ–≤—ã–π View
                
                message_card = await cards_channel.send(content=f"{member.mention}", embed=card_embed, file=card, view=view)

                #–ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã —Å–æ–∑–¥–∞–Ω–Ω–æ–π –∫–∞—Ä—Ç—ã / –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã, –∫—Ä–æ–º–µ —Ü–∏—Ñ—Ä
                card_numbers = full_number.translate(str.maketrans("", "", "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-"))
                supabase.table("cards").update({"select_menu_id": message_card.id}).eq("number", card_numbers).execute()
                await inter.followup.send(content=f"–ö–∞—Ä—Ç–∞ —Ç–∏–ø–∞ {card_type_rus} —Å –Ω–æ–º–µ—Ä–æ–º {full_number} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!\n –ö–∞—Ä—Ç–∞ –±–∞–Ω–∫–∏—Ä–∞ —É–¥–∞–ª–µ–Ω–∞\n –ë–∞–Ω–∫–∏—Ä —Ä–∞–∑–∂–∞–ª–æ–≤–∞–Ω")
            else:
                await delete_card(channel_card_id, int(get_card_info["banker_select_menu_id"]), inter.client)

                supabase.table("cards").update({"balance": int(get_card_info['banker_balance'])}).eq("number", get_card_info["non_banker_number"]).execute()
                await inter.followup.send(content=f"–ö–∞—Ä—Ç–∞ –±–∞–Ω–∫–∏—Ä–∞ —É–¥–∞–ª–µ–Ω–∞\n –ë–∞–Ω–∫–∏—Ä —Ä–∞–∑–∂–∞–ª–æ–≤–∞–Ω")
        else:
            await delete_card(channel_card_id, int(get_card_info["banker_select_menu_id"]), inter.client)
            await inter.followup.send(content=f"–ö–∞—Ä—Ç–∞ –±–∞–Ω–∫–∏—Ä–∞ —É–¥–∞–ª–µ–Ω–∞\n –ë–∞–Ω–∫–∏—Ä —Ä–∞–∑–∂–∞–ª–æ–≤–∞–Ω")
        
        #–°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏
        banker_role_remove = inter.guild.get_role(banker_role_id)
        await member.remove_roles(banker_role_remove)

        kick_team(member_id)


def setup(client):
    client.add_cog(Demote(client))