import nextcord as nxc
from nextcord.ext import commands
from const import *
from modules import *

command = "/–û–±–Ω–∞–ª–∏—á–∏—Ç—å"

class WithdrawMoney(commands.Cog):
    def __init__(self, client):
        self.client = client
        
    @nxc.slash_command(guild_ids=server_id, name="–æ–±–Ω–∞–ª–∏—á–∏—Ç—å", description="–û–±–Ω–∞–ª–∏—á–∏—Ç—å –¥–µ–Ω—å–≥–∏ —Å –∫–∞—Ä—Ç—ã")
    async def withdrawMoney(
        self, 
        inter: nxc.Interaction, 
        member: nxc.Member, 
        count: int = nxc.SlashOption(name="—Å—É–º–º–∞", description="–°—É–º–º–∞ –æ–±–Ω–∞–ª–∏—á–∏–≤–∞–Ω–∏—è", min_value=1, max_value=1000000), 
        description: str = nxc.SlashOption(name="–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", description="–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –±–∞–Ω–∫–∏—Ä–∞", max_length=50)
    ):
        banker = inter.user
        banker_nick = inter.user.display_name
        banker_id = inter.user.id
        member_id = member.id
        member_nick = member.display_name
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ banker
        if not await verify_this_banker(inter, command, inter.user, True):
            return

        await inter.response.defer(ephemeral=True)

        nick_table = supabase.table("clients").select("channels").eq("nickname", member_nick).execute()
        if not nick_table.data:
            await inter.send(f"–û—à–∏–±–∫–∞: –∫–ª–∏–µ–Ω—Ç {member.mention} –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω –∫–ª–∏–µ–Ω—Ç–æ–º.", ephemeral=True)
            return
        
        nick_transaction_channel_id = list(map(int, nick_table.data[0]["channels"].strip("[]").split(",")))[0]

        await inter.send(
            f"‚úÖ **–£—Å–ø–µ—à–Ω–æ –≤—ã—Å—Ç–∞–≤–∏–ª–∏ —Å—á—ë—Ç –Ω–∞ —Å–Ω—è—Ç–∏–µ!**\nüì§ –ö–æ–º—É `{member.mention}`\nüí∞ –°—É–º–º–∞ `{count} –∞–ª–º.`\nüìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: `{description or '‚Äî'}`",
            ephemeral=True
        )

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
        nick_message_text = f"**–ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–Ω—è—Ç–∏–µ –Ω–∞–ª–∏—á–Ω—ã—Ö**\nüí≥ –û—Ç –±–∞–Ω–∫–∏—Ä–∞`{banker.mention}`\nüì§ –ö–æ–º—É `{member_nick}`\nüí∞ –°—É–º–º–∞ `{count} –∞–ª–º.`\nüìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: `{description or '‚Äî'}`"
        nick_transaction_channel = inter.client.get_channel(nick_transaction_channel_id)
        view_member=MyInvoiceView() # –ö–Ω–æ–ø–æ—á–∫–∏
        nick_message = await nick_transaction_channel.send(nick_message_text, view = view_member)

        banker_invoice_channel = inter.client.get_channel(banker_invoice_channel_id)
        view_banker=BankerInvoiceView() # –ö–Ω–æ–ø–æ—á–∫–∏
        banker_message = await banker_invoice_channel.send(nick_message_text, view = view_banker)

        supabase.table("invoice").insert({
            "own_dsc_id":banker_id,
            "own_number":"00000",
            "memb_dsc_id":member_id,
            "memb_message_id":nick_message.id,
            "memb_channel_id":nick_transaction_channel_id,
            "banker_message_id": banker_message.id,
            "count":count,
            "type":"banker"
        }).execute()

def setup(client):
    client.add_cog(WithdrawMoney(client))