import nextcord as nxc
from const import *


def e_noPerms():
    embed = nxc.Embed(
        title="‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", 
        color=nxc.Color.red(), 
        description=(f"–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã! \n\n"
                    f"{bank_sign}")
        )
    return(embed)


def num_limit():
    embed = nxc.Embed(
        title="‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", 
        color=nxc.Color.gold(), 
        description=(f"–ü–∞—Ä–∞–º–µ—Ç—Ä `number` –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º –∏–∑ —Ä–æ–≤–Ω–æ 5 —Ü–∏—Ñ—Ä. \n\n"
                    f"{bank_sign}")
        )
    return(embed)


def num_isClaimed():
    embed = nxc.Embed(
        title="‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", 
        color=nxc.Color.gold(), 
        description=(f"–î–∞–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã —É–∂–µ –∑–∞–Ω—è—Ç. \n\n"
                    f"{bank_sign}")
        )
    return(embed)


def user_cardLimit():
    embed = nxc.Embed(
            title="‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", 
            color=nxc.Color.gold(), 
            description=(f"–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç. \n\n"
                        f"{bank_sign}")
            )
    return(embed)


def user_isBanker():
    embed = nxc.Embed(
            title="‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", 
            color=nxc.Color.gold(), 
            description=(f"–î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –±–∞–Ω–∫–∏—Ä–æ–º. \n\n"
                        f"{bank_sign}")
            )
    return(embed)


def account_wasDeleted():
    embed = nxc.Embed(
            title="‚úÖ –£—Å–ø–µ—Ö!", 
            color=nxc.Color.brand_green(), 
            description=(f"–ë–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω. \n\n"
                        f"{bank_sign}")
            )
    return(embed)


def user_isNotBanker():
    embed = nxc.Embed(
            title="‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", 
            color=nxc.Color.gold(), 
            description=(f"–î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –±–∞–Ω–∫–∏—Ä–æ–º. \n\n"
                        f"{bank_sign}")
            )
    return(embed)


def demotedbanker(card_type_rus, full_number):
    embed = nxc.Embed(
            title="‚úÖ –£—Å–ø–µ—Ö!", 
            color=nxc.Color.brand_green(), 
            description=("–ë–∞–Ω–∫–∏—Ä —Ä–∞–∑–∂–∞–ª–æ–≤–∞–Ω. \n"
                        "–ö–∞—Ä—Ç–∞ –±–∞–Ω–∫–∏—Ä–∞ —É–¥–∞–ª–µ–Ω–∞\n"
                        f"–ö–∞—Ä—Ç–∞ —Ç–∏–ø–∞ {card_type_rus} —Å –Ω–æ–º–µ—Ä–æ–º {full_number} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞! \n\n"
                        f"{bank_sign}")
            )
    return(embed)


def demoteBankerWithCar():
    embed = nxc.Embed(
            title="‚úÖ –£—Å–ø–µ—Ö!", 
            color=nxc.Color.brand_green(), 
            description=("–ë–∞–Ω–∫–∏—Ä —Ä–∞–∑–∂–∞–ª–æ–≤–∞–Ω. \n"
                        "–ö–∞—Ä—Ç–∞ –±–∞–Ω–∫–∏—Ä–∞ —É–¥–∞–ª–µ–Ω–∞. \n\n"
                        f"{bank_sign}")
            )
    return(embed)


def sb_cardNotCreated():
    embed = nxc.Embed(
        title="üö´ –û—à–∏–±–∫–∞", 
        color=nxc.Color.red(), 
        description=("–ö —Å–æ–∂–∞–ª–µ–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞—Ä—Ç—É. \n"
                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏. \n\n"
                    f"{bank_sign}")
        )
    return(embed)


def emb_updateAllCards():
    embed = nxc.Embed(
        title="‚úÖ –£—Å–ø–µ—Ö!", 
        color=nxc.Color.brand_green(), 
        description=("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ. \n\n"
                    f"{bank_sign}")
        )
    return(embed)

def emb_updateAllCards_processbar(progress_bar, percent):
    embed = nxc.Embed(
        color=nxc.Color.brand_green(), 
        description=(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç: `[{progress_bar}] {percent}%` \n\n"
                    f"{bank_sign}")
        )
    return(embed)




















def e_cards(color,full_number,type_rus,name,image):
    embed_color = embed_colors.get(color, color)

    embed = nxc.Embed(color=embed_color)
    embed.add_field(name="üí≥ –ö–∞—Ä—Ç–∞:", value=full_number, inline=True)
    embed.add_field(name="üóÇÔ∏è –¢–∏–ø:", value=type_rus, inline=True)
    embed.add_field(name="üí¨ –ù–∞–∑–≤–∞–Ω–∏–µ", value=name, inline=True)
    if not image == None:
        embed.set_image(url=f"attachment://{image}")
    return(embed)




# def e_cards_users(color,owner_name,members):
#     embed_color = embed_colors.get(color, color)

#     embed = nxc.Embed(color=embed_color)
#     embed.add_field(name="üëë –í–ª–∞–¥–µ–ª–µ—Ü:‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä", value=owner_name, inline=False)
#     embed.add_field(name="üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:", value=members, inline=False)
#     return(embed)
    


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è Embed —Å –Ω–∏–∫–Ω–µ–π–º–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
def e_cards_users(inter, color, owner_name, members):
    embed_color = embed_colors.get(color, color)
    
    embed = nxc.Embed(color=embed_color)
    embed.add_field(name="üëë –í–ª–∞–¥–µ–ª–µ—Ü:‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä", value=owner_name, inline=False)

    # –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —ç—Ç–æ–º
    if not members:
        embed.add_field(name="üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:", value="-", inline=False)
        return embed

    # –°–æ—Å—Ç–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –Ω–∏–∫–Ω–µ–π–º–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    user_names = []
    for user_id in members:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ user_id ‚Äî —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞ –∏–ª–∏ —á–∏—Å–ª–æ, –∞ –Ω–µ –∫–æ—Ä—Ç–µ–∂
        if isinstance(user_id, (str, int)):
            # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–∏–ª—å–¥–∏–∏ –ø–æ ID
            member = inter.guild.get_member(int(user_id))
            if member:
                user_names.append(member.nick)  # –î–æ–±–∞–≤–ª—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫
            else:
                user_names.append(f"–ù–µ –Ω–∞–π–¥–µ–Ω {user_id}")  # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        else:
            user_names.append(f"–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID: {user_id}")  # –ï—Å–ª–∏ user_id ‚Äî —ç—Ç–æ –Ω–µ —Å—Ç—Ä–æ–∫–∞ –∏–ª–∏ —á–∏—Å–ª–æ

    # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ embed
    embed.add_field(name="üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:", value="\n".join(user_names), inline=False)
    
    return embed

